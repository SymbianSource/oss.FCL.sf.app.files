/*
* Copyright (c) 2002-2008 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0""
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project FileManagerEngine
*
*/


//  RESOURCE IDENTIFIER
NAME    FMGE // 4 letter ID

//  INCLUDES
#include <bldvariant.hrh>
#include <eikon.rh>
#include <eikon.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <pathconfiguration.hrh>
#include <filemanager.loc>
#include "FileManagerEngine.rh"
#include "FileManagerEngine.hrh"
#include "BKupEngine.rh"
#include "BkupEngine.hrh"
#include "TMMCScBkupOwnerDataType.h"

//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { }

#ifndef RD_MULTIPLE_DRIVE

RESOURCE ARRAY r_filemanager_default_folders
    {
    items =
        {
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_games_path; 
            isMediaFolder = 0;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_images_path;
            isMediaFolder = 1;
            }, 
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_gms_pictures_path;
            isMediaFolder = 1;
            }, 
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_mms_background_images_path;
            isMediaFolder = 1;
            }, 
#ifdef __DPB
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_presence_logos_path;
            isMediaFolder = 1;
            },
#endif 
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_installs_path; 
            isMediaFolder = 0;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_others_path; 
            isMediaFolder = 0;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_digital_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_simple_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_phone_memory_root_path;
            folder = text_videos_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_images_path;
            isMediaFolder = 1;
            }, 
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_others_path; 
            isMediaFolder = 0;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_digital_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_simple_sounds_path;
            isMediaFolder = 1;
            },
        FILEMANAGER_DEFAULT_FOLDER 
            { 
            root = text_memory_card_root_path;
            folder = text_videos_path;
            isMediaFolder = 1;
            }
        };
    }

#endif // RD_MULTIPLE_DRIVE

RESOURCE ARRAY r_filemanager_mime_icon_mapper
    {
    items = 
        {
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "mpegurl";
            iconId = EFileManagerPlaylistFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ram";
            iconId = EFileManagerLinkFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ota";
            iconId = EFileManagerPictureMsgFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "image";
            iconId = EFileManagerImageFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "presence";
            iconId = EFileManagerDycLogoFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "wml";
            iconId = EFileManagerLinkFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "amr";
            iconId = EFileManagerVoicerecFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ringing-tone";
            iconId = EFileManagerVoicerecFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "awb";
            iconId = EFileManagerVoicerecFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "audio";
            iconId = EFileManagerSoundFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "java-archive";
            iconId = EFileManagerAppFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "x-zip";
            iconId = EFileManagerAppFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "j2me.app";
            iconId = EFileManagerAppFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "text";
            iconId = EFileManagerNoteFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "sis";
            iconId = EFileManagerAppFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "video";
            iconId = EFileManagerVideoFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "realmedia";
            iconId = EFileManagerVideoFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "game";
            iconId = EFileManagerGameFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "other";
            iconId = EFileManagerOtherFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "shockwave-flash";
            iconId = EFileManagerFlashFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "application/pdf";
            iconId = EFileManagerNoteFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ms-powerpoint";
            iconId = EFileManagerNoteFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ms-excel";
            iconId = EFileManagerNoteFileIcon;
            },
        FILEMANAGER_ICON_MAPPER
            {
            mimeType = "ms-word";
            iconId = EFileManagerNoteFileIcon;
            }
        };
    }

#ifdef RD_MULTIPLE_DRIVE

RESOURCE MMC_SECURE_BACKUP_DRIVES_AND_OPERATIONS r_filemanager_backup_restore_drives_and_operations
    {
    drivesAndOperations = 
        {
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypeDataOwner;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypeJavaData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypePublicData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypeSystemData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypeActiveData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EBkupDeviceMemories | EBkupInternalMassStorages;
            type    = EMMCScBkupOwnerDataTypePassiveData;
            }
        };
    }

#else // RD_MULTIPLE_DRIVE

RESOURCE MMC_SECURE_BACKUP_DRIVES_AND_OPERATIONS r_filemanager_backup_restore_drives_and_operations
    {
    /**
    *
    * By default we only backup & restore to/from the internal C: drive
    * to MMC
    *
    */
    drivesAndOperations = 
        {
        ////////////////////////////////////////////////////////////
        // DRIVE C => Back up & restore everything....
        ////////////////////////////////////////////////////////////

        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypeDataOwner;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypeJavaData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypePublicData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypeSystemData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypeActiveData;
            },
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberC;
            type    = EMMCScBkupOwnerDataTypePassiveData;
            }

        ////////////////////////////////////////////////////////////
        // DRIVE E => Not backing up anything currently
        ////////////////////////////////////////////////////////////
/*
        MMC_SECURE_BACKUP_DRIVE_AND_OPERATION_TYPE
            {
            drive   = EMMCDriveNumberE;
            type    = EMMCScBkupOwnerDataTypeSystemData;
            }        
*/
        };
    }

#endif // RD_MULTIPLE_DRIVE

RESOURCE BACKUPCATEGORYARRAY r_filemanager_backup_categories
    {
    backupcategory=
        {
        ////////////////////////////////////////////////////////////
        // Note! EBUCatAllInOne is used for creating old style backup,
        // where all contents is in one archive. See howto from
        // CMMCScBkupOperationParameters.cpp and BkupEngine.hrh 
        ////////////////////////////////////////////////////////////
        BACKUPCATEGORY
            {
            category=EBUCatAllInOne;
            archive_name="Backup.arc";
            special_flags=EBUCatSpecAll;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                };
            exclude_uids=
                {
                };
            },
        ////////////////////////////////////////////////////////////
        // Note! EBUCatSettings basicly contains everything else, but
        // sis and java installations and components, which are not 
        // in the list of excluded UIDs'. It is supposed at least
        // Messages, Contacts, Calendar and Bookmarks should not be
        // included. Additionally call register information falls better 
        // into EBUCatUserFiles as well as MediaGallery and Notepad
        ////////////////////////////////////////////////////////////
        BACKUPCATEGORY
            {
            category=EBUCatSettings;
            archive_name="Settings.arc";
            special_flags=EBUCatSpecAll;
            exclude_special_flags=EBUCatSpecSystem+EBUCatSpecJava;
            uids=
                {
                };
            exclude_uids=
                {
                0x1000484b, // Message store (EBUCatMessages)
                0x100058db, // MMS-settings (EBUCatMessages)
                0x100058eb,  // E-mail-settings (EBUCatMessages)
                0x10003a73, // Contacts model (EBUCatContacts)
                0x101f4cce, // Phonebook-app (EBUCatContacts)
                0x10003a5b, // Agenda model (EBUCatCalendar)
                0x10005901, // Calendar-app (EBUCatCalendar)
                0x10008d38, // Bookmarks (EBUCatBookmarks)
                0x101f401d, // Logs (EBUCatUserFiles)
                0x101f8599, // MediaGallery, i.e. basicly all user data (EBUCatUserFiles)
                0x101f84eb, // FileManager
                0x10005907, // Notepad (EBUCatUserFiles)
                0x1028246F, // Java Backup process
                0x200211DC, // Java Captain process
                0x102033E6 // MIDP2 Runtime process
                };
            },
        BACKUPCATEGORY
            {
            category=EBUCatMessages;
            archive_name="Messages.arc";
            special_flags=EBUCatSpecNone;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                0x1000484b, // Message store
                0x100058db, // MMS-settings
                0x100058eb  // E-mail-settings
                };
            exclude_uids=
                {
                };
            },
        BACKUPCATEGORY
            {
            category=EBUCatContacts;
            archive_name="Contacts.arc";
            special_flags=EBUCatSpecNone;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                0x10003a73, // Contacts model
                0x101f4cce // Phonebook-app
                };
            exclude_uids=
                {
                };
            },
        BACKUPCATEGORY
            {
            category=EBUCatCalendar;
            archive_name="Calendar.arc";
            special_flags=EBUCatSpecNone;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                0x10003a5b, // Agenda model
                0x10005901 // Calendar-app
                };
            exclude_uids=
                {
                };
            },
        BACKUPCATEGORY
            {
            category=EBUCatBookmarks;
            archive_name="Bookmarks.arc";
            special_flags=EBUCatSpecNone;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                0x10008d38
                };
            exclude_uids=
                {
                };
            },
        ////////////////////////////////////////////////////////////
        // Note! We have to explicitly define what belongs to EBUCatUserFiles:
        // EBUCatSpecSystem => SIS-installations, EBUCatSpecJava => midlets
        // We do not specify EBUCatSpecPublic, because several data owners might 
        // have "public" data in <drive>:\xxx folders. Instead MediaGallery defines 
        // user data area for backup (currently C:\Data) in its backup configuration
        // (z:\private\101F8599\backup_registration.xml) file.
        ////////////////////////////////////////////////////////////
        BACKUPCATEGORY
            {
            category=EBUCatUserFiles;
            archive_name="UserFiles.arc";
            special_flags=EBUCatSpecSystem+EBUCatSpecJava;
            exclude_special_flags=EBUCatSpecNone;
            uids=
                {
                0x101f401d, // Logs
                //0x101f8599, // MediaGallery, i.e. basicly all user data
                0x101f84eb, // FileManager
                0x10005907, // Notepad
                0x1028246F, // Java Backup process
                0x200211DC, // Java Captain process
                0x102033E6 // MIDP2 Runtime process
                };
            exclude_uids=
                {
                };
            }
        };
    }

RESOURCE TBUF r_text_mmc_backup_file        { buf = "\\Backup\\Backup.arc"; }
RESOURCE TBUF r_text_phone_memory           { buf = qtn_fmgr_main_phone; }
RESOURCE TBUF r_text_memory_card_default    { buf = qtn_fmgr_main_card_default; }

#ifdef RD_FILE_MANAGER_BACKUP
RESOURCE TBUF r_qtn_fmgr_backup_contents    { buf = qtn_fmgr_backup_contents; }
RESOURCE TBUF r_qtn_fmgr_backup_scheduling  { buf = qtn_fmgr_backup_scheduling; }
RESOURCE TBUF r_qtn_fmgr_backup_weekday     { buf = qtn_fmgr_backup_weekday; }
RESOURCE TBUF r_qtn_fmgr_backup_time        { buf = qtn_fmgr_backup_time; }
RESOURCE TBUF r_qtn_fmgr_backup_destination { buf = qtn_fmgr_backup_destination; }

RESOURCE TBUF r_qtn_fmgr_backup_no_scheduling { buf = qtn_fmgr_backup_no_scheduling; }
RESOURCE TBUF r_qtn_fmgr_backup_daily         { buf = qtn_fmgr_backup_daily; }
RESOURCE TBUF r_qtn_fmgr_backup_weekly        { buf = qtn_fmgr_backup_weekly; }

RESOURCE TBUF r_qtn_fmgr_backup_content_all       { buf = qtn_fmgr_backup_content_all; }
RESOURCE TBUF r_qtn_fmgr_backup_content_selected  { buf = qtn_fmgr_backup_content_selected; }
RESOURCE TBUF r_qtn_fmgr_backup_content_settings  { buf = qtn_fmgr_backup_content_settings; }
RESOURCE TBUF r_qtn_fmgr_backup_content_messages  { buf = qtn_fmgr_backup_content_messages; }
RESOURCE TBUF r_qtn_fmgr_backup_content_contacts  { buf = qtn_fmgr_backup_content_contacts; }
RESOURCE TBUF r_qtn_fmgr_backup_content_calendar  { buf = qtn_fmgr_backup_content_calendar; }
RESOURCE TBUF r_qtn_fmgr_backup_content_bookmarks { buf = qtn_fmgr_backup_content_bookmarks; }
RESOURCE TBUF r_qtn_fmgr_backup_content_userfiles { buf = qtn_fmgr_backup_content_userfiles; }

RESOURCE TBUF r_qtn_fmgr_restore_settings  { buf = qtn_fmgr_restore_settings; }
RESOURCE TBUF r_qtn_fmgr_restore_messages  { buf = qtn_fmgr_restore_messages; }
RESOURCE TBUF r_qtn_fmgr_restore_contacts  { buf = qtn_fmgr_restore_contacts; }
RESOURCE TBUF r_qtn_fmgr_restore_calendar  { buf = qtn_fmgr_restore_calendar; }
RESOURCE TBUF r_qtn_fmgr_restore_bookmarks { buf = qtn_fmgr_restore_bookmarks; }
RESOURCE TBUF r_qtn_fmgr_restore_userfiles { buf = qtn_fmgr_restore_userfiles; }
RESOURCE TBUF r_qtn_fmgr_main_backup       { buf = qtn_fmgr_main_backup; }
#endif // RD_FILE_MANAGER_BACKUP

RESOURCE TBUF r_qtn_fmgr_main_phone        { buf = qtn_fmgr_main_phone; }
RESOURCE TBUF r_qtn_fmgr_main_card_default { buf = qtn_fmgr_main_card_default; }
RESOURCE TBUF r_qtn_fmgr_title_phone_mem   { buf = qtn_fmgr_title_phone_mem; }
RESOURCE TBUF r_qtn_fmgr_title_mem_card    { buf = qtn_fmgr_title_mem_card; }

#ifdef RD_MULTIPLE_DRIVE
RESOURCE TBUF r_qtn_fmgr_main_device_memory       { buf = qtn_fmgr_main_device_memory; }
RESOURCE TBUF r_qtn_fmgr_main_mass_storage        { buf = qtn_fmgr_main_mass_storage; }
RESOURCE TBUF r_qtn_fmgr_main_memory_card_default { buf = qtn_fmgr_main_memory_card_default; }
RESOURCE TBUF r_qtn_fmgr_main_named_memory_card   { buf = qtn_fmgr_main_named_memory_card; }

RESOURCE TBUF r_qtn_fmgr_title_device_memory       { buf = qtn_fmgr_title_device_memory; }
RESOURCE TBUF r_qtn_fmgr_title_mass_storage        { buf = qtn_fmgr_title_mass_storage; }
RESOURCE TBUF r_qtn_fmgr_title_named_memory_card   { buf = qtn_fmgr_title_named_memory_card; }
RESOURCE TBUF r_qtn_fmgr_title_memory_card_default { buf = qtn_fmgr_title_memory_card_default; }
#endif // RD_MULTIPLE_DRIVE

RESOURCE TBUF r_qtn_fmgr_main_usb_default  { buf = qtn_fmgr_main_usb_default; }
RESOURCE TBUF r_qtn_fmgr_title_usb_default { buf = qtn_fmgr_title_usb_default; }
RESOURCE TBUF r_qtn_fmgr_backup_content_device_memory { buf = qtn_fmgr_backup_content_device_memory; }
RESOURCE TBUF r_qtn_fmgr_backup_content_mass_storage{ buf = qtn_fmgr_backup_content_mass_storage; }
RESOURCE TBUF r_qtn_fmgr_restore_device_memory { buf = qtn_fmgr_restore_device_memory; }
RESOURCE TBUF r_qtn_fmgr_restore_mass_storage { buf = qtn_fmgr_restore_mass_storage; }

// End of File
